<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context.xsd  
            http://www.springframework.org/schema/tx  
            http://www.springframework.org/schema/tx/spring-tx.xsd  
            http://www.springframework.org/schema/jdbc  
            http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
            http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath*:/spring-service.xml" />

	<mvc:annotation-driven />

	<!-- 自动搜索@Controller标注的类 -->
	<context:component-scan base-package="com.ruobilin.mall.controller" />

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath">
			<value>/views/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="default.contentType">text/html; charset=UTF-8</prop>
			</props>
		</property>
	</bean>
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="configLocation" value="classpath:velocity.properties" />
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver ">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="requestContextAttribute" value="request"/> 

		<!-- if you want to use the Spring Velocity macros, set this property to true -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true"></property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="toolboxConfigLocation">
			<value>/WEB-INF/toolbox.xml</value>
		</property>
		<property name="layoutUrl" value="layout/layout.vm"/>
	</bean>


	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="i18n/messages" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- the maximum file size in bytes : 1M = 1048576, 2M = 2097152, 5M = 5242880 -->
		<property name="maxUploadSize" value="2097152" />
	</bean>

	<bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro的核心安全接口 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 -->
		<property name="loginUrl" value="/u/login" />
		<!-- 登陆成功后要跳转的连接 -->
		<property name="successUrl" value="/" />
		<!-- 未授权时要跳转的连接 -->
		<property name="unauthorizedUrl" value="u//login" />
		<!-- shiro连接约束配置 -->
		<property name="filterChainDefinitions">
			<value>
				/u/login = anon
				/u/logout = logout
				/u/info = authc
				/u/** = anon
				/o/** = authc
				/center/** = authc
				/address/**= authc
				/** = anon
			</value>
		</property>
	</bean>

	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	<bean id="userRealm" class="com.ruobilin.mall.realm.UserAuthorizingRealm">
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.image.width">74</prop>
						<prop key="kaptcha.image.height">36</prop>
						<prop key="kaptcha.textproducer.font.size">26</prop>
						<prop key="kaptcha.textproducer.char.string">abcdefghijklmnopqrstuvwxyz</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="imageDisposer" class="com.ruobilin.search.utils.image.JavaImageDisposer" />
	
	<bean id="cart" class="com.ruobilin.mall.web.cart.SessionCart" />
	
	<!-- 配置Solr服务器 SorlJ 实现类 -->
	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg>
			<value>http://123.56.158.19:8080/solr</value>
		</constructor-arg>
	</bean>
</beans>